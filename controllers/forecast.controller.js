const { geocode } = require("../services/geocode.service");
const { getForecast } = require("../services/weather.service");

async function renderForecast(req, res) {
  try {
    const q = (req.query.q || "").trim();
    if (!q) return res.status(400).render("forecast", { error: "Please enter a location.", location: null, current: null, hourly: null });

    const loc = await geocode(q);
    if (!loc) return res.status(404).render("forecast", { error: "Location not found.", location: null, current: null, hourly: null });

    const wx = await getForecast(loc.lat, loc.lon);

    const location = { name: loc.name, lat: loc.lat, lon: loc.lon };
    const current = wx.current ?? null;
    const hourly = wx.hourly ?? null;

    const weatherIcons = {
      0: "‚òÄÔ∏è",                           // Clear
      1: "‚òÅÔ∏è", 2: "‚òÅÔ∏è", 3: "‚òÅÔ∏è",          // Cloudy
      45: "üå´", 48: "üå´",                 // Fog
      51: "üå¶", 53: "üå¶", 55: "üå¶",       // Drizzle
      56: "üå¶", 57: "üå¶",                 // Freezing drizzle
      61: "üåß", 63: "üåß", 65: "üåß",       // Rain
      66: "üåß", 67: "üåß",                 // Freezing rain
      71: "üå®", 73: "üå®", 75: "üå®",       // Snowfall
      77: "üå®",                          // Snow grains
      80: "üåß", 81: "üåß", 82: "üåß",       // Showers
      85: "üå®", 86: "üå®",                 // Snow showers
      95: "‚õà", 96: "‚õà", 99: "‚õà"         // Thunderstorm
    };

    hourly.icons = hourly.weathercode.map(code => weatherIcons[code] || "‚ùì");

    console.log(location);

    res.render("forecast", { error: null, location, current, hourly });
  } catch (err) {
    console.error(err.message);
    res.status(500).render("forecast", { error: "Something went wrong fetching weather.", location: null, current: null, hourly: null });
  }
}

module.exports = { renderForecast };
